<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.removequarantine</string>
	<key>connections</key>
	<dict>
		<key>8A0A36B3-0A1C-4F9B-B056-1CAC58E3266F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>57E5FCE3-A396-4994-B57D-D2645AFE5445</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>48EF776B-4BA6-46F0-A8E3-352D98A24170</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B7C223E0-57D2-4067-AF52-F5160C420029</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>57E5FCE3-A396-4994-B57D-D2645AFE5445</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>48EF776B-4BA6-46F0-A8E3-352D98A24170</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Remove the quarantine attribute from app bundles and disk images</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>RemoveQuarantine</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>IFS=$'\t'

for app in ${@}; do
  xattr -d com.apple.quarantine "${app}"
done</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>57E5FCE3-A396-4994-B57D-D2645AFE5445</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>rq</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Finding quaratined apps in /Applications…</string>
				<key>script</key>
				<string>app_list=()

for app in /Applications/*; do
  [[ $(xattr "${app}" | grep 'com.apple.quarantine') ]] &amp;&amp; app_list+=("${app}")
done

if [[ "${#app_list[@]}" -eq 0 ]]; then
  echo "&lt;?xml version='1.0'?&gt;&lt;items&gt;
    &lt;item valid='no'&gt;
    &lt;title&gt;You have no quarantined applications at the root of /Applications&lt;/title&gt;
    &lt;subtitle&gt;Use this workflow’s File Action if you need more granularity&lt;/subtitle&gt;
    &lt;/item&gt;
  &lt;/items&gt;"
else
  echo "&lt;?xml version='1.0'?&gt;&lt;items&gt;"
  for app in "${app_list[@]}"; do
  	echo "&lt;item arg='${app}' type='file:skipcheck' valid='yes'&gt;"
  	echo "&lt;title&gt;$(basename "${app}")&lt;/title&gt;"
  	echo "&lt;icon type='fileicon'&gt;${app}&lt;/icon&gt;"
  	echo "&lt;/item&gt;"
  done
  echo "&lt;/items&gt;"
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Remove the quarantine attribute from your apps</string>
				<key>title</key>
				<string>RemoveQuarantine</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>8A0A36B3-0A1C-4F9B-B056-1CAC58E3266F</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>acceptsmulti</key>
				<true/>
				<key>filetypes</key>
				<array>
					<string>com.apple.application-bundle</string>
					<string>com.apple.disk-image-udif</string>
				</array>
				<key>name</key>
				<string>Remove quarantine</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.action</string>
			<key>uid</key>
			<string>B7C223E0-57D2-4067-AF52-F5160C420029</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly download_type='direct'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  local -r terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>48EF776B-4BA6-46F0-A8E3-352D98A24170</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Call `rq` and a list of your top-level apps at `/Applications` with the file quarantine attribute will be shown. Action any of them and the quarantine will be removed.

![](https://i.imgur.com/CUJF4uI.png)

Results are treated as files, so you can select a bunch of them at once via the File Buffer, to act on multiple apps.

If the app or dmg you want to remove the attribute from is located anywhere else, you can find it and use the File Action on it for the same effect.

![](https://i.imgur.com/gcPTAVf.png)

Warning: quarantining is a macOS security feature, and I do not recommend you disable it completely. This workflow was built exactly so you don’t have to, and can deal with it on a case-by-case basis. This simply makes the manual process more convenient and you should remove the quarantine attribute from apps at your own risk. Find more on file quarantine on [Apple’s documentation](https://developer.apple.com/library/content/releasenotes/Carbon/RN-LaunchServices/index.html).</string>
	<key>uidata</key>
	<dict>
		<key>48EF776B-4BA6-46F0-A8E3-352D98A24170</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>300</integer>
			<key>ypos</key>
			<integer>170</integer>
		</dict>
		<key>57E5FCE3-A396-4994-B57D-D2645AFE5445</key>
		<dict>
			<key>xpos</key>
			<integer>300</integer>
			<key>ypos</key>
			<integer>40</integer>
		</dict>
		<key>8A0A36B3-0A1C-4F9B-B056-1CAC58E3266F</key>
		<dict>
			<key>xpos</key>
			<integer>60</integer>
			<key>ypos</key>
			<integer>40</integer>
		</dict>
		<key>B7C223E0-57D2-4067-AF52-F5160C420029</key>
		<dict>
			<key>xpos</key>
			<integer>60</integer>
			<key>ypos</key>
			<integer>170</integer>
		</dict>
	</dict>
	<key>version</key>
	<string>20.2</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
